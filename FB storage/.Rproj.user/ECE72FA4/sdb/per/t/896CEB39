{
    "contents" : "#' @title FB file reader\n#' @name read.fb\nNULL\n#' @description Read in funding bucket files via data.table::fread and convert\n#' them to the \"fb\" class. The header is stored as attributes.\n#' Applies attrubutes based off of the file header information.\n#'\n#' @param file Path to fb .csv file.\n#'\n#' @examples\n#' \\dontrun{\n#' require(data.table)\n#' folder_path  <- 'C:/Users/dalrymplej/Dropbox/EToPac/data-sets'\n#' file_name <- 'fb contract 10_01_14_to_07_31_15 run 10_19_15.csv'\n#' file_name <- 'fb direct 10_01_14_to_07_31_15 run 10_19_15.csv'\n#' file_path <- file.path(folder_path, file_name)\n#' my_fb_dt <- read.fb(file_path)\n#' lapply(my_fb_dt, class)\n#' attributes(my_fb_dt)\n#' }\n#'\n#' @return A data.table object that is also class 'fb.'\n#'\n#' @note Might even format if James isn't to lazy to do it himself.\n#'\n#' @importFrom EquaPac p_stop fn\n#' @importFrom data.table data.table last := .SD fread\n\n#' @usage NULL\n#' @rdname read.fb\nchar_cols <-\n  list(\n    `PROVIDER NAME` = \"character\",\n    `PROVIDER ID` = \"integer\",\n    `CASE #` = \"integer\",\n    `PRI PROCEDURE CODE` = \"character\",\n    `SEC PROCECURE CODE` = \"logical\",\n    MOD = \"character\",\n    `SERVICE DESC` = \"character\",\n    `CATEGORY DESC` = \"character\",\n    `UNIT TYPE` = \"character\",\n    `FROM DATE` = \"character\",\n    `THRU DATE` = \"character\",\n    UNITS = \"integer\",\n    DURATION = \"integer\",\n    `ALLOWED AMOUNT` = \"numeric\",\n    `CHARGED AMOUNT` = \"integer\",\n    POPULATION = \"character\",\n    `ADULT OR CHILD` = \"character\",\n    AGE = \"integer\",\n    `COV: MEDICAID` = \"character\",\n    `COV: HAB WAIVER` = \"character\",\n    `COV: CHILD WAIVER` = \"character\",\n    `COV: SED WAIVER` = \"character\",\n    `COV: ABW` = \"character\",\n    `COV: HEALTHY MI PLAN` = \"character\",\n    `COV: MI CHILD` = \"character\",\n    `COV: AUTISM` = \"character\",\n    `COV: COFR` = \"character\",\n    `SRV: STATE PLAN` = \"character\",\n    `SRV: ALT/B3` = \"character\",\n    `SRV: HAB WAIVER` = \"character\",\n    `SRV: EPSDT` = \"character\",\n    `SRV: CHILD WAIVER` = \"character\",\n    `SRV: GF ONLY` = \"character\",\n    `BKT: GF` = \"character\",\n    `BKT: STATE PLAN` = \"character\",\n    `BKT: ALT/B3` = \"character\",\n    `BKT: EPSDT` = \"character\",\n    `BKT: HAB WAIVER` = \"character\",\n    `BKT: ABW` = \"character\",\n    `BKT: HEALTHY MI PLAN` = \"character\",\n    `BKT: MICHILD` = \"character\",\n    `BKT: CHILD WAIVER` = \"character\",\n    `BKT: SED WAIVER` = \"character\",\n    `BKT: AUTISM/MICHILD` = \"character\",\n    `BKT: AUTISM/MEDICAID` = \"character\",\n    `BKT: COFR` = \"character\",\n    `STAFF NAME` = \"character\",\n    `PLACE OF SERVICE` = \"integer\",\n    `BATCH ID` = \"integer\",\n    `CLAIM ID` = \"integer\",\n    `CLAIM DETAIL ID` = \"integer\",\n    SOURCE = \"character\")\n\n#' @usage NULL\n#' @rdname read.fb\nread_header <- function(file_path) {\n  s <- 0\n  DT_header <-\n    read.table(file=d00_list[i], header=FALSE, sep=\",\", skip=s, nrows=1)\n  repeat {\n    s <- s + 1\n    add_line <- read.table(file=d00_list[i], header=FALSE,\n                           sep=\",\", skip=s, nrows=1)\n    if (sum(is.na(add_line))==length(add_line)) break\n    DT_header <- rbind(DT_header, add_line)\n  }\n  if (s >= 8) p_stop(\"More than 7 rows in the header, something has changed in\n                     fb header. Investigate now, alter read_header in\n                     read.fb.R in 'package:wccmh' if necessary.\")\n  return(data.table(DT_header))\n}\n\n#' @rdname read.fb\n#' @export\nread.fb <- function(file_path) {\n  fn <- EquaPac:::fn # for now, may revisit this fn() later in EquaPac\n  V1 <- V2 <- NULL # checker appeasment\n  attr_DT <- read_header(file_path)\n  DT <- fread(input = file_path, skip = only_space, showProgress = FALSE)\n  # check classes and column names\n  if(!identical(lapply(DT, class), char_cols)) {\n    p_stop(\"The file does not have FB structure, please examine classes of\n            fread(file), file = \", file_path)\n  }\n  attr_DT[, c(names(attr_DT)) := lapply(.SD, function(x) gsub(\":\", \"\", x))]\n  for (i in seq.int(nrow(attr_DT))) { # i=1\n    attr(DT, attr_DT[i, V1]) <- as.character(attr_DT[i, V2])\n  }\n  class(DT) <- c(class(DT), 'fb')\n  return(DT)\n}\n",
    "created" : 1445528395115.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1419020445",
    "id" : "896CEB39",
    "lastKnownWriteTime" : 1445531520,
    "path" : "~/GitHub/wccmh/R/read.fb.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}