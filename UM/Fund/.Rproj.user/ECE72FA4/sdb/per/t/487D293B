{
    "collab_server" : "",
    "contents" : "## to do:: remove state hospital consumers from all spreadsheets\n\n# initializing working directory and input parameters -------------------------\nrm(list = ls()) # clear RAM\n# which computer results in correct base working directory\nwd <- list()\nwd <- switch (Sys.info()[\"nodename\"],\n  \"WSHSQLGP\" = {# PCE 107\n  wd['dropbox_base'] <- \"C:/Users/dalrymplej/Dropbox\"\n  wd['github_base'] <- \"C:/Users/dalrymplej/Documents/GitHub\"\n  },\n  \"DESKTOP-45K7RRN\" = {# county laptop\n  wd['dropbox_base'] <- \"filler\"\n  wd['github_base'] <- \"filler\"\n  },\n  \"JAMES-2\" = {# main computer\n  wd['dropbox_base'] <- \"filler\"\n  wd['github_base'] <- \"filler\"\n  }\n)\n\n  # user input required\n  run_date <- \"9/22/2015\" # for folder\n  end_date <- \"7/31/2015\" # data parameter end\n  # keep_funds <- c(\"GF\")\n  # keep_funds <- c(\"spend-down\")\n  # keep_funds <- c(\"Medicaid\", \"HMP\")\n  # keep_funds <- c(\"Medicare/TPP\")\n\n  # working folders and subfolders\n  sub_folder <- gsub(x = run_date, pattern = \"/\", replace = \"_\")\n  dataWD <- file.path(\"Dropbox/Utilization Management/Fund Only/Data\",\n                      sub_folder)\n  codeWD <- \"Dropbox/Utilization Management/Fund Only/R Code\"\n  resultsWD <- file.path(\"Dropbox/Utilization Management/Fund Only/Results\",\n                         sub_folder)\n  rm(sub_folder)\n\n  ## read in source files ##\n   # global auxillary file (personal library)\n   source(file.path(baseWD, \"Dropbox/WCCMH/R/begin script R code.r\"))\n   # local auxillary file\n   source(file.path(baseWD, codeWD, \"service array\", \"service auxillary.r\"))\n   # base service array\n   source(file.path(baseWD, codeWD, \"service array\", \"base_service_array.r\"))\n\n#### filtering ####\n  ## CSTS open consumers without a fund/insurance layer ##\n  # tmp_services[is.na(fund) & is.na(cmh_expdt) & !is.na(cmh_effdt)]\n  all_funds <- services[, unique(fund)]\n\n\n\n#   data.table(services[fund!=\"closed_CMH\" & fund!=\"non_CMH\"\n#            & team!=\"Non-CMH\", table(team)]\n#   )\n#\n  data.table(services[fund != \"closed_CMH\" & fund != \"non_CMH\"\n                      & team != \"Non-CMH\",\n                      table(fund)])[, sum(N)]\n#\n#   nrow(services)\n#   services[, length(unique(case_no))]\n\n  # no insurance:\n  # 10441\n  # insurance - (I assume) retroactively got Medicaid:\n  # 262589, 260438, 225892, 12098, 12716, 252800\n  # 216351, 12810, 1145860, 13827\n  # only did not have medicaid June 2015\n  # 12186,\n  # 207181 - died in June 2015, but they wrote the wrong year... 2016\n\n#   ncol(services)\n#   hospitalized <- services[case_no %in%\n#     c(14156, 10947, 103106, 219859, 95710, 246762, 1152586,\n#       1132623, 1134948, 100015, 12646)]\n#   ncol(hospitalized)\n#   write.csv(hospitalized, file.path(baseWD, resultsWD, \"hospitalized.csv\"), row.names=FALSE)\n\n#### create fund xlsx files ####\nfor(i in seq_along(all_funds)) {\n  keep_funds <- all_funds[i]\n  tmp_services <- services[fund %in% keep_funds]\n  tmp_mi_services <- mi_services[fund %in% keep_funds]\n  tmp_yf_services <- yf_services[fund %in% keep_funds]\n\n#### create workbook ####\n  wb <- createWorkbook()\n  # bold option and underline\n  cs3 <- CellStyle(wb) + Font(wb, isBold=TRUE) + Border()\n  ### create DD ###\n    dd_sheet <- createSheet(wb, sheetName=\"DD\")\n    dd_services <- copy(tmp_services[team==\"DD\"])\n    addDataFrame(x=dd_services, sheet=dd_sheet, showNA=FALSE,\n                 row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n  ### Youth and Family ###\n    yf_sheet <- createSheet(wb, sheetName=\"Y&F\")\n    addDataFrame(x=tmp_yf_services, sheet=yf_sheet, showNA=FALSE,\n                 row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n  ### MI Adult ###\n    mi_sheet <- createSheet(wb, sheetName=\"MI\")\n    addDataFrame(x=tmp_mi_services, sheet=mi_sheet, showNA=FALSE,\n                 row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n  ### level 0 - no TCM ###\n    l0_sheet <- createSheet(wb, sheetName=\"MI_L0\")\n    l0_noTCM <- copy(tmp_mi_services[level==\"L0_No_TCM\"])\n    addDataFrame(x=l0_noTCM, sheet=l0_sheet, showNA=FALSE,\n                 row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n  ### level 1 ###\n    l1_sheet <- createSheet(wb, sheetName=\"MI_L1\")\n    l1_mi <- copy(tmp_mi_services[level==\"L1\"])\n    addDataFrame(x=l1_mi, sheet=l1_sheet, showNA=FALSE,\n                 row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n  ### level 2 ###\n    l2_sheet <- createSheet(wb, sheetName=\"MI_L2\")\n    l2_mi <- copy(tmp_mi_services[level==\"L2\"])\n    addDataFrame(x=l2_mi, sheet=l2_sheet, showNA=FALSE,\n                 row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n  ### level 3 ###\n    l3_sheet <- createSheet(wb, sheetName=\"MI_L3\")\n    l3_mi = copy(tmp_mi_services[level==\"L3\"])\n    addDataFrame(x=l3_mi, sheet=l3_sheet, showNA=FALSE,\n                 row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n  ### ACT ###\n    act_sheet <- createSheet(wb, sheetName=\"MI_L4_ACT\")\n    act_services <- copy(tmp_mi_services[team==\"ACT\"])\n    addDataFrame(x=act_services, sheet=act_sheet, showNA=FALSE,\n                 row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n  ### MI Residential ###\n    res_sheet <- createSheet(wb, sheetName=\"MI_L5_Res\")\n    res_services <- copy(tmp_mi_services[level==\"Residential\"])\n    addDataFrame(x=res_services, sheet=res_sheet, showNA=FALSE,\n                 row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n    ### CLS H2015 (CLS | Community) ###\n    cls_h2015_sheet <- createSheet(wb, sheetName=\"CLS H2015\")\n    # filter out cls community blanks\n    cls_h2015_save <- copy(tmp_services)\n    if(length(grep(x=colnames(cls_h2015_save), pattern=\"CLS | Community\", fixed=TRUE))==1) {\n      setnames(cls_h2015_save, \"CLS | Community\", \"cls_community\")\n      cls_h2015_save <- cls_h2015_save[!is.na(cls_community)]\n      setnames(cls_h2015_save, \"cls_community\", \"CLS | Community\")\n      addDataFrame(x=cls_h2015_save, sheet=cls_h2015_sheet, showNA=FALSE,\n                   row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n    } else {\n      addDataFrame(x=services[case_no==-1], sheet=cls_h2015_sheet, showNA=FALSE,\n                   row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n    }\n    ### CLS H2016 ###\n    cls_h2016_sheet <- createSheet(wb, sheetName=\"CLS H2016\")\n    # filter out cls h2016\n    cls_h2016_save <- copy(tmp_services)\n    if(length(grep(x=colnames(cls_h2016_save),\n                   pattern= \"CLS | Specialized Residential\", fixed=TRUE))>0) {\n      setnames(cls_h2016_save, \"CLS | Specialized Residential\", \"cls_h2016\")\n      cls_h2016_save <- cls_h2016_save[!is.na(cls_h2016)]\n      setnames(cls_h2016_save, \"cls_h2016\", \"CLS | Specialized Residential\")\n      addDataFrame(x=cls_h2016_save, sheet=cls_h2016_sheet, showNA=FALSE,\n                   row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n    } else {\n      addDataFrame(x=services[case_no==-1], sheet=cls_h2016_sheet, showNA=FALSE,\n                   row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n    }\n    ### CLS T2038 ###\n    cls_t2038_sheet <- createSheet(wb, sheetName=\"CLS T2038\")\n    # filter out cls t2038\n    cls_t2038_save <- copy(tmp_services)\n\n    if(length(grep(x=colnames(cls_t2038_save),\n                   pattern=\"Home Modification | Children/Housing Assistance\", fixed=TRUE))>0) {\n      setnames(cls_t2038_save, \"Home Modification | Children/Housing Assistance\", \"cls_t2038\")\n      cls_t2038_save <- cls_t2038_save[!is.na(cls_t2038)]\n      setnames(cls_t2038_save, \"cls_t2038\", \"Home Modification | Children/Housing Assistance\")\n      # add cls_t2038_save to cls_t2038_sheet\n      addDataFrame(x=cls_t2038_save, sheet=cls_t2038_sheet, showNA=FALSE,\n                   row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n    } else {\n      addDataFrame(x=services[case_no==-1], sheet=cls_t2038_sheet, showNA=FALSE,\n                   row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n    }\n    ### CLS H0043 (CLS | independent living) ###\n    cls_h0043_sheet <- createSheet(wb, sheetName=\"CLS H0043\")\n    # filter out cls independent living\n    cls_h0043_save <- copy(tmp_services)\n    if(length(grep(x=colnames(cls_h0043_save),\n                   pattern=\"CLS | independent living\", fixed=TRUE))>0) {\n      setnames(cls_h0043_save, \"CLS | independent living\", \"cls_ind_living\")\n      cls_h0043_save <- cls_h0043_save[!is.na(cls_ind_living)]\n      setnames(cls_h0043_save, \"cls_ind_living\", \"CLS | independent living\")\n      addDataFrame(x=cls_h0043_save, sheet=cls_h0043_sheet, showNA=FALSE,\n                   row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n    } else {\n      addDataFrame(x=services[case_no==-1], sheet=cls_h0043_sheet, showNA=FALSE,\n                   row.names = FALSE, startRow=1, startColumn=1, colnamesStyle=cs3)\n    }\n  ### create all_fund_sheet ###\n  all_fund_sheet <- createSheet(wb,\n    sheetName=gsub(x=paste(keep_funds, collapse=\"\"), pattern=\"/\", replace=\"_\") )\n  addDataFrame(x=tmp_services, sheet=all_fund_sheet, showNA=FALSE, row.names=FALSE,\n               startRow=1, startColumn=1, colnamesStyle=cs3)\n  ### create HAB_sheet ###\n    if(nrow(tmp_services[fund==\"HAB spend-down\"])>0 ) {\n      hab_sheet <- createSheet(wb, sheetName=\"HAB spenddown\")\n      addDataFrame(x=tmp_services[fund==\"HAB spend-down\"], sheet=hab_sheet, showNA=FALSE, row.names=FALSE,\n                   startRow=1, startColumn=1, colnamesStyle=cs3)\n    }\n  ### create sheet data information ###\n    sheet_info = createSheet(wb, sheetName=\"Data Info\")\n    addDataFrame(x=aboutFile, sheet=sheet_info, showNA=FALSE,\n                 row.names=FALSE, col.names=TRUE, startRow=1,\n                 startColumn = 1, colnamesStyle=cs3)\n\n### save workbook ###\n  # create result folder\n  ### R 3.2.0 approach\n  if(!dir.exists(file.path(baseWD, resultsWD))) {\n    dir.create(file.path(baseWD, resultsWD))\n    paste(\"folder created\", file.path(baseWD, resultsWD), sep=\"...\")\n  }\n\n  # file name\n  export_file <- paste0(\n    fund_name(keep_funds),\n    \"_service_array_\", run_par, \".xlsx\")\n\n  gc(reset = TRUE)\n  saveWorkbook(wb=wb, file=file.path(baseWD, resultsWD,\n                                     export_file))\n  print(paste(keep_funds, \"completed\"))\n  rm(wb)\n}\n",
    "created" : 1444765334201.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1546768612",
    "id" : "487D293B",
    "lastKnownWriteTime" : 1444767849,
    "path" : "~/CMH/UM/Fund/2_fund_filter.r",
    "project_path" : "2_fund_filter.r",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}